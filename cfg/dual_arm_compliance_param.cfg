#!/usr/bin/env python
PACKAGE = "franka_combined_bimanual_controllers"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# The add function adds a parameter to the list of parameters. It takes a few different arguments:
# name - a string which specifies the name under which this parameter should be stored
# paramtype - defines the type of value stored, and can be any of int_t, double_t, str_t, or bool_t
# level - A bitmask which will later be passed to the dynamic reconfigure callback. When the callback is called all of the level values for parameters that have been changed are ORed together and the resulting value is passed to the callback.
# description - string which describes the parameter
# default - specifies the default value
# min - specifies the min value (optional and does not apply to strings and bools)
# max - specifies the max value (optional and does not apply to strings and bools)
# Source https://wiki.ros.org/dynamic_reconfigure/Tutorials/HowToWriteYourFirstCfgFile
gen.add("panda_left_translational_stiffness_X", double_t, 0, "Cartesian translational stiffness of left arm", 500, 0, 2000)
gen.add("panda_left_translational_stiffness_Y", double_t, 0, "Cartesian translational stiffness of left arm", 500, 0, 2000)
gen.add("panda_left_translational_stiffness_Z", double_t, 0, "Cartesian translational stiffness of left arm", 500, 0, 2000)
gen.add("panda_left_rotational_stiffness_X", double_t, 0, "Cartesian rotational stiffness of left arm", 20, 0, 50)
gen.add("panda_left_rotational_stiffness_Y", double_t, 0, "Cartesian rotational stiffness of left arm", 20, 0, 50)
gen.add("panda_left_rotational_stiffness_Z", double_t, 0, "Cartesian rotational stiffness of left arm", 20, 0, 50)
gen.add("panda_left_damping_ratio", double_t, 0, "Damping_ratio_translation of left", 0.77, 0, 3)

# Desired nullspace joint configuration for the left arm
gen.add("panda_left_q_d_nullspace_j1", double_t, 0, "Desired nullspace joint 1 for left arm (rad)", 0.0, -2.897, 2.897)
gen.add("panda_left_q_d_nullspace_j2", double_t, 0, "Desired nullspace joint 2 for left arm (rad)", 0.0, -1.763, 1.763)
gen.add("panda_left_q_d_nullspace_j3", double_t, 0, "Desired nullspace joint 3 for left arm (rad)", 0.0, -2.897, 2.897)
gen.add("panda_left_q_d_nullspace_j4", double_t, 0, "Desired nullspace joint 4 for left arm (rad)", -1.57, -3.072, -0.07)
gen.add("panda_left_q_d_nullspace_j5", double_t, 0, "Desired nullspace joint 5 for left arm (rad)", 0.0, -2.897, 2.897)
gen.add("panda_left_q_d_nullspace_j6", double_t, 0, "Desired nullspace joint 6 for left arm (rad)", 1.57, -0.018, 3.752)
gen.add("panda_left_q_d_nullspace_j7", double_t, 0, "Desired nullspace joint 7 for left arm (rad)", 0.0, -2.897, 2.897)

gen.add("panda_left_stiffness_roll", double_t, 0, "stiffness frame rotation roll", 0,-3.14159265359, 3.14159265359)
gen.add("panda_left_stiffness_pitch", double_t, 0, "stiffness frame rotation pitch", 0,-3.14159265359, 3.14159265359)
gen.add("panda_left_stiffness_yaw", double_t, 0, "stiffness frame rotation yaw", 0, -3.14159265359, 3.14159265359)

# Common Nullspace Stiffness Gains (applied to both arms)
gen.add("common_nullspace_stiffness_j1", double_t, 0, "Nullspace stiffness for joint 1", 10.0, 0, 100)
gen.add("common_nullspace_stiffness_j2", double_t, 0, "Nullspace stiffness for joint 2", 10.0, 0, 100)
gen.add("common_nullspace_stiffness_j3", double_t, 0, "Nullspace stiffness for joint 3", 10.0, 0, 100)
gen.add("common_nullspace_stiffness_j4", double_t, 0, "Nullspace stiffness for joint 4", 1.0, 0, 100)
gen.add("common_nullspace_stiffness_j5", double_t, 0, "Nullspace stiffness for joint 5", 1.0, 0, 100)
gen.add("common_nullspace_stiffness_j6", double_t, 0, "Nullspace stiffness for joint 6", 1.0, 0, 100)
gen.add("common_nullspace_stiffness_j7", double_t, 0, "Nullspace stiffness for joint 7", 1.0, 0, 100)

gen.add("panda_right_translational_stiffness_X", double_t, 0, "Cartesian translational stiffness", 500, 0, 2000)
gen.add("panda_right_translational_stiffness_Y", double_t, 0, "Cartesian translational stiffness", 500, 0, 2000)
gen.add("panda_right_translational_stiffness_Z", double_t, 0, "Cartesian translational stiffness", 500, 0, 2000)
gen.add("panda_right_rotational_stiffness_X", double_t, 0, "Cartesian rotational stiffness", 20, 0, 50)
gen.add("panda_right_rotational_stiffness_Y", double_t, 0, "Cartesian rotational stiffness", 20, 0, 50)
gen.add("panda_right_rotational_stiffness_Z", double_t, 0, "Cartesian rotational stiffness", 20, 0, 50)
gen.add("panda_right_damping_ratio", double_t, 0, "Damping_ratio_translation of right", 0.77, 0, 3)

# Desired nullspace joint configuration for the right arm
gen.add("panda_right_q_d_nullspace_j1", double_t, 0, "Desired nullspace joint 1 for right arm (rad)", 0.0, -2.897, 2.897)
gen.add("panda_right_q_d_nullspace_j2", double_t, 0, "Desired nullspace joint 2 for right arm (rad)", 0.0, -1.763, 1.763)
gen.add("panda_right_q_d_nullspace_j3", double_t, 0, "Desired nullspace joint 3 for right arm (rad)", 0.0, -2.897, 2.897)
gen.add("panda_right_q_d_nullspace_j4", double_t, 0, "Desired nullspace joint 4 for right arm (rad)", -1.57, -3.072, -0.07)
gen.add("panda_right_q_d_nullspace_j5", double_t, 0, "Desired nullspace joint 5 for right arm (rad)", 0.0, -2.897, 2.897)
gen.add("panda_right_q_d_nullspace_j6", double_t, 0, "Desired nullspace joint 6 for right arm (rad)", 1.57, -0.018, 3.752)
gen.add("panda_right_q_d_nullspace_j7", double_t, 0, "Desired nullspace joint 7 for right arm (rad)", 0.0, -2.897, 2.897)

gen.add("panda_right_stiffness_roll", double_t, 0, "stiffness frame rotation roll", 0,-3.14159265359, 3.14159265359)
gen.add("panda_right_stiffness_pitch", double_t, 0, "stiffness frame rotation pitch", 0,-3.14159265359, 3.14159265359)
gen.add("panda_right_stiffness_yaw", double_t, 0, "stiffness frame rotation yaw", 0, -3.14159265359, 3.14159265359)

gen.add("coupling_translational_stiffness", double_t, 0, "Coupling stiffness", 0, 0, 2000)

gen.add("delta_lim", double_t, 0, "Maximum attractor limit to avoid strange behaviour", 0.075, 0.05, 0.20)

exit(gen.generate(PACKAGE, "dynamic_compliance", "dual_arm_compliance_param"))
