#!/usr/bin/env python
PACKAGE = "franka_combined_bimanual_controllers"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# The add function adds a parameter to the list of parameters. It takes a few different arguments:
# name - a string which specifies the name under which this parameter should be stored
# paramtype - defines the type of value stored, and can be any of int_t, double_t, str_t, or bool_t
# level - A bitmask which will later be passed to the dynamic reconfigure callback. When the callback is called all of the level values for parameters that have been changed are ORed together and the resulting value is passed to the callback.
# description - string which describes the parameter
# default - specifies the default value
# min - specifies the min value (optional and does not apply to strings and bools)
# max - specifies the max value (optional and does not apply to strings and bools)
# Source https://wiki.ros.org/dynamic_reconfigure/Tutorials/HowToWriteYourFirstCfgFile
gen.add("panda_left_translational_stiffness_X", double_t, 0, "Cartesian translational stiffness of left arm", 200, 0, 2000)
gen.add("panda_left_translational_stiffness_Y", double_t, 0, "Cartesian translational stiffness of left arm", 200, 0, 2000)
gen.add("panda_left_translational_stiffness_Z", double_t, 0, "Cartesian translational stiffness of left arm", 200, 0, 2000)
gen.add("panda_left_rotational_stiffness_X", double_t, 0, "Cartesian rotational stiffness of left arm", 10, 0, 50)
gen.add("panda_left_rotational_stiffness_Y", double_t, 0, "Cartesian rotational stiffness of left arm", 10, 0, 50)
gen.add("panda_left_rotational_stiffness_Z", double_t, 0, "Cartesian rotational stiffness of left arm", 10, 0, 50)
gen.add("panda_left_nullspace_stiffness", double_t, 0, "Stiffness of left arm of the joint space nullspace controller (the desired configuration is the one at startup)", 0, 0, 100)
gen.add("panda_left_damping_ratio", double_t, 0, "Damping_ratio_translation of left", 0.77, 0, 3)

gen.add("panda_left_stiffness_roll", double_t, 0, "stiffness frame rotation roll", 0,-3.14159265359, 3.14159265359)
gen.add("panda_left_stiffness_pitch", double_t, 0, "stiffness frame rotation pitch", 0,-3.14159265359, 3.14159265359)
gen.add("panda_left_stiffness_yaw", double_t, 0, "stiffness frame rotation yaw", 0, -3.14159265359, 3.14159265359)

gen.add("panda_right_translational_stiffness_X", double_t, 0, "Cartesian translational stiffness", 200, 0, 2000)
gen.add("panda_right_translational_stiffness_Y", double_t, 0, "Cartesian translational stiffness", 200, 0, 2000)
gen.add("panda_right_translational_stiffness_Z", double_t, 0, "Cartesian translational stiffness", 200, 0, 2000)
gen.add("panda_right_rotational_stiffness_X", double_t, 0, "Cartesian rotational stiffness", 10, 0, 50)
gen.add("panda_right_rotational_stiffness_Y", double_t, 0, "Cartesian rotational stiffness", 10, 0, 50)
gen.add("panda_right_rotational_stiffness_Z", double_t, 0, "Cartesian rotational stiffness", 10, 0, 50)
gen.add("panda_right_nullspace_stiffness", double_t, 0, "Stiffness of right arm of the joint space nullspace controller (the desired configuration is the one at startup)", 0, 0, 100)
gen.add("panda_right_damping_ratio", double_t, 0, "Damping_ratio_translation of right", 0.77, 0, 3)

gen.add("panda_right_stiffness_roll", double_t, 0, "stiffness frame rotation roll", 0,-3.14159265359, 3.14159265359)
gen.add("panda_right_stiffness_pitch", double_t, 0, "stiffness frame rotation pitch", 0,-3.14159265359, 3.14159265359)
gen.add("panda_right_stiffness_yaw", double_t, 0, "stiffness frame rotation yaw", 0, -3.14159265359, 3.14159265359)

gen.add("coupling_translational_stiffness", double_t, 0, "Coupling stiffness", 0, 0, 2000)

gen.add("delta_lim", double_t, 0, "Maximum attractor limit to avoid strange behaviour", 0, 0.08, 0.20)

exit(gen.generate(PACKAGE, "dynamic_compliance", "dual_arm_compliance_param"))
